@model CTJEvaluation001.MVC.ViewModels.ObservationDashboardViewModel

@{
    ViewBag.Title = "Observation";
    Layout = "~/Views/Shared/_Layout.cshtml";
    IEnumerable<CTJEvaluation001.MVC.ViewModels.ObservationViewModel> observations = Model.observations.ToList();
}

<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
<meta http-equiv="x-ua-compatible" content="ie=edge">

<script src="Scripts/plugins.js"></script>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script src="Scripts/app.js"></script>

<link rel="stylesheet" href="~/Content/css/font-awesome/font-awesome.min.css">
<link rel="stylesheet" href="~/Content/css/main.css">
<link rel="stylesheet" href="~/Content/css/custom.css">

<div class="container-fluid">
    <header class="page-content-header widgets-header">
        <div class="container-fluid">

            <div class="tbl tbl-outer">
                <div class="tbl-row">
                    <div class="tbl-cell">
                        <div class="tbl tbl-item">
                            <div class="tbl-row">
                                <div class="widget-pie-chart-header">
                                    <div class="col-60">
                                        <div class="widget-pie-chart-header-title">Observações(@Model.observationDraw.ObservacoesTotal)</div>
                                    </div>
                                </div>
                                <div class="tbl tbl-grid">
                                    <div class="tbl-row">
                                        <div class="tbl-cell tbl-cell-30">
                                            <div class="ggl-pie-chart-container size-120 avaliacao-pie-chart-container">
                                                <div id="observacoes" class="ggl-pie-chart"></div>
                                            </div>
                                        </div>
                                        @if (Model.observationDraw.ObservacoesTotal > 0)
                                        {
                                            <div class="tbl-cell tbl-cell-60 tbl-cell-ctj-avaliacoes">
                                                <ul class="chart-legend-list font-16">
                                                    <li>
                                                        <div class="dot green"></div>
                                                        Done
                                                    </li>
                                                    <li>
                                                        <div class="dot red"></div>
                                                        Not started
                                                    </li>
                                                    <li>
                                                        <div class="dot orange"></div>
                                                        In progress
                                                    </li>
                                                </ul>
                                            </div>
                                        }                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tbl-cell">
                        <div class="tbl tbl-item">
                            <div class="tbl-row">
                                <div class="widget-pie-chart-header">
                                    <div class="col-60">
                                        <div class="widget-pie-chart-header-title">Revisões(@Model.observationDraw.RevisoesTotal)</div>
                                    </div>
                                </div>
                                <div class="tbl tbl-grid">
                                    <div class="tbl-row">
                                        <div class="tbl-cell tbl-cell-30">
                                            <div class="ggl-pie-chart-container size-120 avaliacao-pie-chart-container">
                                                <div id="observacoesRevisao" class="ggl-pie-chart"></div>
                                            </div>
                                        </div>
                                        @if (Model.observationDraw.RevisoesTotal > 0)
                                        {
                                            <div class="tbl-cell tbl-cell-60 tbl-cell-ctj-avaliacoes">
                                                <ul class="chart-legend-list font-16">
                                                    <li>
                                                        <div class="dot green"></div>
                                                        Done
                                                    </li>
                                                    <li>
                                                        <div class="dot red"></div>
                                                        Not started
                                                    </li>
                                                    <li>
                                                        <div class="dot orange"></div>
                                                        In progress
                                                    </li>
                                                </ul>
                                            </div>
                                        }                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tbl-cell">
                        <div class="tbl tbl-item">
                            <div class="tbl-row">
                                <div class="widget-pie-chart-header">
                                    <div class="col-60">
                                        <div class="widget-pie-chart-header-title">Avaliação Final(@Model.observationDraw.ObsFinalTotal)</div>
                                    </div>
                                </div>
                                <div class="tbl tbl-grid">
                                    <div class="tbl-row">
                                        <div class="tbl-cell tbl-cell-30">
                                            <div class="ggl-pie-chart-container size-120 avaliacao-pie-chart-container">
                                                <div id="observacoesFinal" class="ggl-pie-chart"></div>
                                            </div>
                                        </div>
                                        @if (Model.observationDraw.ObsFinalTotal > 0)
                                        {
                                            <div class="tbl-cell tbl-cell-60 tbl-cell-ctj-avaliacoes">
                                                <ul class="chart-legend-list font-16">
                                                    <li>
                                                        <div class="dot green"></div>
                                                        Done
                                                    </li>
                                                    <li>
                                                        <div class="dot red"></div>
                                                        Not started
                                                    </li>
                                                    <li>
                                                        <div class="dot orange"></div>
                                                        In progress
                                                    </li>
                                                </ul>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
</div>


<div class="container-fluid">
    <div class="row">
        <div class="col-xl-12">
            @if (TempData["Sucess"] != null)
            {
                <div class="alert alert-success">
                    @TempData["Sucess"]
                </div>
            }
            @*<section class="box-typical box-typical-dashboard">*@
                <header class="box-typical-header">
                    <div class="tbl-row">
                        <div class="tbl-cell tbl-cell-title">
                            <h3>Observations</h3>
                        </div>
                        <div class="tbl-cell tbl-cell-actions">

                        </div>
                    </div>
                </header>
            <div class="box-typical box-typical-padding">
                <table class="table table-hover" id="listObservationTable">
                    <thead>
                        <tr style="line-height: 0.5;">
                            <th class="disable-sorting"></th>
                            <th>Observation</th>
                            <th>Observed</th>
                            <th class="disable-sorting"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in observations)
                        {
                            <tr>
                                <td class="text-center">
                                    @{
                                        if (item.Status == 1)
                                        {
                                            <span class="label label-success">
                                                <span class="glyphicon glyphicon-thumbs-up"></span>
                                            </span>
                                        }
                                        else if (item.Status == 2)
                                        {
                                            <span class="label label-danger">
                                                <span class="glyphicon glyphicon-thumbs-down"></span>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="label label-warning">
                                                <span class="glyphicon glyphicon-thumbs-up"></span>
                                            </span>
                                        }
                                    }

                                </td>
                                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.Observed.Name)</td>
                                <td>
                                    <a href="@Url.Action("Edit", new { id = item.Id })"
                                       class="btn btn-sm btn-secondary btn-rounded">
                                        <span class="glyphicon glyphicon-new-window"></span>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            @*</section>*@
        </div>
    </div>

    @*<div class="box-typical box-typical-padding">

        <h6 style="margin-top: 0px; font-weight:bold;" class="m-t-lg with-border">Reports</h6>

        <div class="row">
            <div class="col-lg-12">
                <div class="form-group" style="margin-bottom: 0px;">
                    <a class="btn-link"
                       href="@Url.Action("Index", "Reports", new { nameReport = "ManfAvaliado" })">
                        <span class="glyphicon glyphicon-print"></span> Manifestação do Avaliado(a)
                    </a>

                    <a class="btn-link"
                       href="@Url.Action("Index", "Reports", new { nameReport = "TeacObservReport" })">
                        <span class="glyphicon glyphicon-print"></span> Teacher Observation Report
                    </a>

                    <a class="btn-link"
                       href="@Url.Action("Index", "Reports", new { nameReport = "ChartCollection" })">
                        <span class="glyphicon glyphicon-print"></span> Chart Collection
                    </a>

                    <a class="btn-link"
                       href="@Url.Action("Index", "Reports", new { nameReport = "Rap" })">
                        <span class="glyphicon glyphicon-print"></span> RAP
                    </a>
                </div>
            </div>
        </div>
    </div>*@

    <div class="modal fade filtroAvancado"
         tabindex="-1"
         role="dialog"
         aria-labelledby="myLargeModalLabel"
         aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="modal-close" data-dismiss="modal" aria-label="Close">
                        <i class="font-icon-close-2"></i>
                    </button>
                    <h4 class="modal-title" id="myModalLabel">Filtros</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <fieldset class="form-group">
                                <label class="form-label semibold" for="exampleInput">Parametro</label>
                                <input type="text" class="form-control" id="exampleInput"
                                       placeholder="Digite um parametro...">
                            </fieldset>
                            <fieldset class="form-group">
                                <label class="form-label semibold" for="exampleInput">Parametro</label>
                                <select class="select2">
                                    <option>Opção 1</option>
                                    <option>Opção 2</option>
                                    <option>Opção 3</option>
                                    <option>Texto extra extra extra extra longo.</option>
                                </select>
                            </fieldset>
                        </div>
                        <div class="col-md-6">
                            <fieldset class="form-group">
                                <label class="form-label semibold" for="exampleInput">Parametro</label>
                                <input type="text" class="form-control" id="exampleInput"
                                       placeholder="Digite um parametro...">
                            </fieldset>
                            <fieldset class="form-group">
                                <label class="form-label semibold" for="exampleInput">Parametro</label>
                                <select class="select2">
                                    <option>Opção 1</option>
                                    <option>Opção 2</option>
                                    <option>Opção 3</option>
                                    <option>Texto extra extra extra extra longo.</option>
                                </select>
                            </fieldset>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-rounded btn-default" data-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-rounded btn-primary">Pesquisar</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script> -->
<script type="text/javascript">
    google.charts.setOnLoadCallback(drawChartObservacoes);
    function drawChartObservacoes() {
        var data = google.visualization.arrayToDataTable([
            ['Titles', 'Values'],
            ['Done', @Model.observationDraw.ObservacoesRespondidas],
            ['Not started', @Model.observationDraw.ObservacoesNaoRespondidas],
            ['In progress', @Model.observationDraw.ObservacoesEmAndamento]
        ]);

        var options = {
            legend: 'none',
            pieSliceText: 'none',
            width: 80,
            height: 80,
            chartArea: {
                width: '90%',
                height: '90%',
            },
            colors: ['#46c35f', '#fa424a', '#fdad2a'],
            slices: {
                0: { color: '#46c35f' },
                1: { color: '#fa424a' },
                2: { color: '#fdad2a' }
            },
            pieHole: 0.0,
            tooltip: { trigger: 'true' }
        };

        var chart = new google.visualization.PieChart(document.getElementById('observacoes'));
        chart.draw(data, options);
    }
</script>
<script type="text/javascript">
    google.charts.setOnLoadCallback(drawChartObservacoesRevisao);
    function drawChartObservacoesRevisao() {
        var data = google.visualization.arrayToDataTable([
            ['Titles', 'Values'],
            ['Done', @Model.observationDraw.RevisoesRespondidas],
            ['Not started', @Model.observationDraw.RevisoesNaoRespondidas],
            ['In progress', @Model.observationDraw.RevisoesEmAndamento]
        ]);

        var options = {
            legend: 'none',
            pieSliceText: 'none',
            width: 80,
            height: 80,
            chartArea: {
                width: '90%',
                height: '90%',
            },
            colors: ['#46c35f', '#fa424a', '#fdad2a'],
            slices: {
                0: { color: '#46c35f' },
                1: { color: '#fa424a' },
                2: { color: '#fdad2a' }
            },
            pieHole: 0.0,
            tooltip: { trigger: 'true' }
        };

        var chart = new google.visualization.PieChart(document.getElementById('observacoesRevisao'));
        chart.draw(data, options);
    }
</script>
<script type="text/javascript">
    google.charts.setOnLoadCallback(drawChartObservacoesFinal);
    function drawChartObservacoesFinal() {
        var data = google.visualization.arrayToDataTable([
            ['Titles', 'Values'],
            ['Done', @Model.observationDraw.ObsFinalRespondidas],
            ['Not started', @Model.observationDraw.ObsFinalNaoRespondidas],
            ['In progress', @Model.observationDraw.ObsFinalEmAndamento]
        ]);

        var options = {
            legend: 'none',
            pieSliceText: 'none',
            width: 80,
            height: 80,
            chartArea: {
                width: '90%',
                height: '90%',
            },
            colors: ['#46c35f', '#fa424a', '#fdad2a'],
            slices: {
                0: { color: '#46c35f' },
                1: { color: '#fa424a' },
                2: { color: '#fdad2a' }
            },
            pieHole: 0.0,
            tooltip: { trigger: 'true' }
        };

        var chart = new google.visualization.PieChart(document.getElementById('observacoesFinal'));
        chart.draw(data, options);
    }
</script>

<script type="text/javascript">
    google.charts.setOnLoadCallback(drawVisualization);

    function drawVisualization() {
        var data = google.visualization.arrayToDataTable([
            ['value1', 'value2', 'value3'],
            ['X', 5, 50],
            ['F', 25, 55],
            ['A', 12, 50],
            ['B', 3, 85],
            ['C', 35, 90],
            ['D', 15, 98],
            ['E', 12, 70],
            ['O', 5, 80],
            ['M', 18, 110],
            ['N', 40, 128],
            ['K', 50, 120],
            ['L', 22, 130]
        ]);

        var options = {
            legend: 'none',
            tooltip: { trigger: 'none' },
            enableInteractivity: false,
            vAxis: {
                textStyle: {
                    color: '#919fa9',
                    fontName: 'Proxima Nova',
                    fontSize: 11
                },
                baselineColor: '#eff1f2',
                ticks: [0, 25, 50, 75, 100, 125, 150],
                gridlines: {
                    color: '#eff1f2',
                    count: 7
                }
            },
            hAxis: {
                textStyle: {
                    color: '#919fa9',
                    fontName: 'Proxima Nova',
                    fontSize: 11
                }
            },
            chartArea: {
                left: 30,
                top: 10,
                width: '100%',
                height: 175
            },
            lineWidth: 2,
            seriesType: 'bars',
            series: {
                0: { color: '#ac6bec' },
                1: {
                    type: 'line',
                    color: '#00a8ff',
                    pointSize: 4,
                    pointShapeType: 'circle'
                }
            }
        };

        var chart = new google.visualization.ComboChart(document.getElementById('chart_div'));
        chart.draw(data, options);
    }
    $(window).resize(function () {
        drawVisualization();
    });
</script>
<script type="text/javascript">
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawBasic);

    function drawBasic() {

        var data = google.visualization.arrayToDataTable([
            ['Month', 'Value'],
            ['NOV', 2],
            ['DEC', 6],
            ['JAN', 5],
            ['FEB', 7],
            ['MAR', 5],
            ['APR', 8]
        ]);

        var options = {
            legend: 'none',
            areaOpacity: 0.18,
            tooltip: { trigger: 'none' },
            hAxis: {
                textStyle: {
                    color: '#fff',
                    fontName: 'Proxima Nova',
                    fontSize: 11,
                    bold: true
                },
                gridlines: 'null'
            },
            vAxis: {
                minValue: 0,
                textStyle: {
                    color: '#fff',
                    fontName: 'Proxima Nova',
                    fontSize: 11,
                    bold: true
                },
                baselineColor: '#16b4fc',
                ticks: [0, 2, 4, 6, 8, 10, 12],
                gridlines: {
                    color: '#1ba0fc',
                    count: 7
                },
            },
            lineWidth: 2,
            colors: ['#fff'],
            curveType: 'function',
            pointSize: 5,
            pointShapeType: 'circle',
            pointFillColor: '#f00',
            backgroundColor: {
                fill: '#008ffb',
                strokeWidth: 0
            },
            chartArea: {
                left: '10%',
                top: 5,
                width: '80%',
                height: 200
            }
        };

        var chart = new google.visualization.AreaChart(document.getElementById('chart_line'));

        chart.draw(data, options);
    }
    $(window).resize(function () {
        drawBasic();
    });
</script>

@section scripts {
    <script>
        $(document).ready(function () {
            $('.side-menu-list li').removeClass('active');
            $('#sideMenuListItemObservations').addClass('active');
        });
    </script>
}